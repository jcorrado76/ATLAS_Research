!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Alg_Name	PlotMETDistsVersMu.h	/^   TString Alg_Name = "CELL MET";$/;"	m	class:PlotMETDistsVersMu
Begin	PlotMETDistsVersMu.C	/^void PlotMETDistsVersMu::Begin(TTree *) \/\/ {{{$/;"	f	class:PlotMETDistsVersMu
Colors	PlotMETDistsVersMu.h	/^   Int_t Colors[Number_Mu_Bins] = {1,2,3,4,12,6,9};$/;"	m	class:PlotMETDistsVersMu
EventNumber	PlotMETDistsVersMu.h	/^   TTreeReaderValue<ULong64_t> EventNumber = {fReader, "EventNumber"};$/;"	m	class:PlotMETDistsVersMu
GetEntry	PlotMETDistsVersMu.h	/^   virtual Int_t   GetEntry(Long64_t entry, Int_t getall = 0) { return fChain ? fChain->GetTree()->GetEntry(entry, getall) : 0; }$/;"	f	class:PlotMETDistsVersMu
GetOutputList	PlotMETDistsVersMu.h	/^   virtual TList  *GetOutputList() const { return fOutput; }$/;"	f	class:PlotMETDistsVersMu
HLT_noalg_L1XE30_passed	PlotMETDistsVersMu.h	/^   TTreeReaderValue<Bool_t> HLT_noalg_L1XE30_passed = {fReader, "HLT_noalg_L1XE30.passed"};$/;"	m	class:PlotMETDistsVersMu
HLT_noalg_zb_L1ZB_passed	PlotMETDistsVersMu.h	/^   TTreeReaderValue<Bool_t> HLT_noalg_zb_L1ZB_passed = {fReader, "HLT_noalg_zb_L1ZB.passed"};$/;"	m	class:PlotMETDistsVersMu
HLT_noalg_zb_L1ZB_prescale	PlotMETDistsVersMu.h	/^   TTreeReaderValue<Float_t> HLT_noalg_zb_L1ZB_prescale = {fReader, "HLT_noalg_zb_L1ZB.prescale"};$/;"	m	class:PlotMETDistsVersMu
InTimePileup	PlotMETDistsVersMu.h	/^   TTreeReaderValue<Float_t> InTimePileup = {fReader, "InTimePileup"};$/;"	m	class:PlotMETDistsVersMu
Init	PlotMETDistsVersMu.C	/^void PlotMETDistsVersMu::Init(TTree *tree) \/\/{{{$/;"	f	class:PlotMETDistsVersMu
L1XE30_Efficiency_Fit_Objects	PlotMETDistsVersMu.h	/^   TF1* L1XE30_Efficiency_Fit_Objects[Number_Mu_Bins];$/;"	m	class:PlotMETDistsVersMu
L1XE30_Efficiency_Objects	PlotMETDistsVersMu.h	/^   TEfficiency* L1XE30_Efficiency_Objects[Number_Mu_Bins];$/;"	m	class:PlotMETDistsVersMu
L1_MET	PlotMETDistsVersMu.h	/^   TTreeReaderValue<Float_t> L1_MET = {fReader, l1_alg_name};$/;"	m	class:PlotMETDistsVersMu
MET_Data	PlotMETDistsVersMu.h	/^   TTreeReaderValue<Float_t> MET_Data = {fReader, zb_alg_name };$/;"	m	class:PlotMETDistsVersMu
MET_Distribution	PlotMETDistsVersMu.h	/^   TH1F* MET_Distribution = 0;$/;"	m	class:PlotMETDistsVersMu
MET_L1XE30Efficiency	PlotMETDistsVersMu.h	/^   TEfficiency* MET_L1XE30Efficiency = 0;$/;"	m	class:PlotMETDistsVersMu
MET_L1XE30EfficiencyFit	PlotMETDistsVersMu.h	/^   TF1* MET_L1XE30EfficiencyFit = 0;$/;"	m	class:PlotMETDistsVersMu
MarkerStyles	PlotMETDistsVersMu.h	/^   Int_t MarkerStyles[Number_Mu_Bins] = {29,20,3,4,27,22,21};$/;"	m	class:PlotMETDistsVersMu
Met_Distributions_By_Mu_Bin	PlotMETDistsVersMu.h	/^   TH1F* Met_Distributions_By_Mu_Bin[Number_Mu_Bins];$/;"	m	class:PlotMETDistsVersMu
Mu_Values	PlotMETDistsVersMu.h	/^   Float_t Mu_Values[Number_Mu_Bins+1] = { 0.0 };$/;"	m	class:PlotMETDistsVersMu
Normalized_Met_Distributions	PlotMETDistsVersMu.h	/^   TH1F* Normalized_Met_Distributions[Number_Mu_Bins];$/;"	m	class:PlotMETDistsVersMu
Notify	PlotMETDistsVersMu.C	/^Bool_t PlotMETDistsVersMu::Notify() \/\/{{{$/;"	f	class:PlotMETDistsVersMu
Number_Mu_Bins	PlotMETDistsVersMu.h	/^    const static Int_t Number_Mu_Bins = 7;$/;"	m	class:PlotMETDistsVersMu
PlotMETDistsVersMu	PlotMETDistsVersMu.h	/^   PlotMETDistsVersMu(TTree * =0) { }$/;"	f	class:PlotMETDistsVersMu
PlotMETDistsVersMu	PlotMETDistsVersMu.h	/^class PlotMETDistsVersMu : public TSelector {$/;"	c
PlotMETDistsVersMu_cxx	PlotMETDistsVersMu.C	1;"	d	file:
PlotMETDistsVersMu_h	PlotMETDistsVersMu.h	9;"	d
Process	PlotMETDistsVersMu.C	/^Bool_t PlotMETDistsVersMu::Process(Long64_t entry)\/\/{{{$/;"	f	class:PlotMETDistsVersMu
RunNumber	PlotMETDistsVersMu.h	/^   TTreeReaderValue<UInt_t> RunNumber = {fReader, "RunNumber"};$/;"	m	class:PlotMETDistsVersMu
SetInputList	PlotMETDistsVersMu.h	/^   virtual void    SetInputList(TList *input) { fInput = input; }$/;"	f	class:PlotMETDistsVersMu
SetObject	PlotMETDistsVersMu.h	/^   virtual void    SetObject(TObject *obj) { fObject = obj; }$/;"	f	class:PlotMETDistsVersMu
SetOption	PlotMETDistsVersMu.h	/^   virtual void    SetOption(const char *option) { fOption = option; }$/;"	f	class:PlotMETDistsVersMu
SlaveBegin	PlotMETDistsVersMu.C	/^void PlotMETDistsVersMu::SlaveBegin(TTree * \/*tree*\/) \/\/ {{{$/;"	f	class:PlotMETDistsVersMu
SlaveTerminate	PlotMETDistsVersMu.C	/^void PlotMETDistsVersMu::SlaveTerminate(){}$/;"	f	class:PlotMETDistsVersMu
Terminate	PlotMETDistsVersMu.C	/^void PlotMETDistsVersMu::Terminate() \/\/{{{$/;"	f	class:PlotMETDistsVersMu
Version	PlotMETDistsVersMu.h	/^   virtual Int_t   Version() const { return 2; }$/;"	f	class:PlotMETDistsVersMu
XE	PlotMETDistsVersMu.h	/^   Float_t XE = 30.0; \/\/ L1 cut$/;"	m	class:PlotMETDistsVersMu
efficiency_bin_width	PlotMETDistsVersMu.h	/^    Float_t efficiency_bin_width = 20.0; \/\/want 20 GeV bins$/;"	m	class:PlotMETDistsVersMu
efficiency_nbins	PlotMETDistsVersMu.h	/^    Int_t efficiency_nbins = (gevHigh - gevLow) \/ efficiency_bin_width;$/;"	m	class:PlotMETDistsVersMu
efficiency_title	PlotMETDistsVersMu.h	/^    TString efficiency_title = zb_alg_name + " Efficiency";$/;"	m	class:PlotMETDistsVersMu
efficiency_xaxis	PlotMETDistsVersMu.h	/^    TString efficiency_xaxis = zb_alg_name + " [GeV]";$/;"	m	class:PlotMETDistsVersMu
efficiency_yaxis	PlotMETDistsVersMu.h	/^    TString efficiency_yaxis = "efficiency";$/;"	m	class:PlotMETDistsVersMu
fChain	PlotMETDistsVersMu.h	/^   TTree          *fChain = 0;   \/\/!pointer to the analyzed TTree or TChain$/;"	m	class:PlotMETDistsVersMu
fReader	PlotMETDistsVersMu.h	/^   TTreeReader     fReader;  \/\/!the tree reader$/;"	m	class:PlotMETDistsVersMu
fitFunction	PlotMETDistsVersMu.C	/^Double_t PlotMETDistsVersMu::fitFunction(Double_t *x , Double_t *par ){\/\/{{{$/;"	f	class:PlotMETDistsVersMu
generateFitFunction	PlotMETDistsVersMu.C	/^TF1* PlotMETDistsVersMu::generateFitFunction(TEfficiency* teff_obj, float gevMax, float initial_slope, float initial_intercept, float initial_sigma ){\/\/{{{$/;"	f	class:PlotMETDistsVersMu
gevHigh	PlotMETDistsVersMu.h	/^    Float_t gevHigh = 300.0;$/;"	m	class:PlotMETDistsVersMu
gevLow	PlotMETDistsVersMu.h	/^    Float_t gevLow = 0.0;$/;"	m	class:PlotMETDistsVersMu
inMuRange	PlotMETDistsVersMu.C	/^Bool_t PlotMETDistsVersMu::inMuRange( Float_t a , Float_t b ){ \/\/{{{$/;"	f	class:PlotMETDistsVersMu
isGoodRun	PlotMETDistsVersMu.C	/^Bool_t PlotMETDistsVersMu::isGoodRun(){ \/\/{{{$/;"	f	class:PlotMETDistsVersMu
isHLT_zb_L1XE30	PlotMETDistsVersMu.C	/^Bool_t PlotMETDistsVersMu::isHLT_zb_L1XE30(){ \/\/{{{$/;"	f	class:PlotMETDistsVersMu
isHLT_zb_L1ZB	PlotMETDistsVersMu.C	/^Bool_t PlotMETDistsVersMu::isHLT_zb_L1ZB(){ \/\/{{{$/;"	f	class:PlotMETDistsVersMu
l1_alg_name	PlotMETDistsVersMu.h	/^   TString l1_alg_name = "L1.met";$/;"	m	class:PlotMETDistsVersMu
met_dist_binwidth	PlotMETDistsVersMu.h	/^    Float_t met_dist_binwidth = 1.0;$/;"	m	class:PlotMETDistsVersMu
met_dist_nbins	PlotMETDistsVersMu.h	/^    Int_t met_dist_nbins = (gevHigh - gevLow) \/ met_dist_binwidth; \/\/ compute nbins as function of preferred width$/;"	m	class:PlotMETDistsVersMu
met_dist_xaxis	PlotMETDistsVersMu.h	/^    TString met_dist_xaxis = zb_alg_name + " [GeV]";$/;"	m	class:PlotMETDistsVersMu
met_dist_yaxis	PlotMETDistsVersMu.h	/^    TString met_dist_yaxis = "Number of Entries";$/;"	m	class:PlotMETDistsVersMu
run_plotMETDist	run_plotMETDist.C	/^void run_plotMETDist(){$/;"	f
zb_alg_name	PlotMETDistsVersMu.h	/^   TString zb_alg_name = "cell.met"; $/;"	m	class:PlotMETDistsVersMu
~PlotMETDistsVersMu	PlotMETDistsVersMu.h	/^   virtual ~PlotMETDistsVersMu() { }$/;"	f	class:PlotMETDistsVersMu
