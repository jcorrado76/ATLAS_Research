!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUILTIN	include/TreeHandler.h	/^        enum value_type { CLASS, BUILTIN, NOT_SET, static_size };$/;"	e	enum:TTreeReaderSpace::BranchType::value_type
BranchHandle	include/TreeHandler.h	/^    class BranchHandle$/;"	c	namespace:TTreeReaderSpace
BranchType	include/TreeHandler.h	/^    struct BranchType$/;"	s	namespace:TTreeReaderSpace
CLASS	include/TreeHandler.h	/^        enum value_type { CLASS, BUILTIN, NOT_SET, static_size };$/;"	e	enum:TTreeReaderSpace::BranchType::value_type
Clear	include/TreeHandler.h	/^    void Handle<T>::Clear()$/;"	f	class:TTreeReaderSpace::Handle
FileForSignal	userInfo.C	/^const TString FileForSignal = "PhysicsMain.L1KFmuontriggers.2016.f731f758_m1659m1710.Run309759.48Runs.root";$/;"	v
FileForThresh	userInfo.C	/^const TString FileForThresh = "ZeroBiasKF2016R307195R311481Runs51.root";$/;"	v
Fill_Bisection_Data	userInfo.C	/^void userInfo::Fill_Bisection_Data(const Float_t input , const Float_t output, const Int_t numEvents,$/;"	f	class:userInfo
Frac	userInfo.C	/^Float_t Frac = 0.0059;$/;"	v
Get	include/TreeHandler.h	/^    const T& Handle<T>::Get()$/;"	f	class:TTreeReaderSpace::Handle
GetEntry	TreeHandler.C	/^void TTreeReader::GetEntry(const unsigned int entry)$/;"	f	class:TTreeReader
GetEntry	include/TreeHandler.h	/^    void Handle<T>::GetEntry(const unsigned int entry)$/;"	f	class:TTreeReaderSpace::Handle
GetIsLoaded	include/TreeHandler.h	/^    void Handle<T>::GetIsLoaded() const$/;"	f	class:TTreeReaderSpace::Handle
Get_ActintCut	userInfo.C	/^Float_t userInfo::Get_ActintCut() const { return( M_ActintCut);}$/;"	f	class:userInfo
Get_AlgAName	userInfo.C	/^TString userInfo::Get_AlgAName() const { return (M_AlgAName);}$/;"	f	class:userInfo
Get_AlgBName	userInfo.C	/^TString userInfo::Get_AlgBName() const { return (M_AlgBName);}$/;"	f	class:userInfo
Get_BinWidth	userInfo.C	/^Float_t userInfo::Get_BinWidth() const { return(M_BinWidth); }$/;"	f	class:userInfo
Get_CombinedAlgAThresh	userInfo.C	/^Float_t userInfo::Get_CombinedAlgAThresh()  const { return (M_AlgACombinedThresh); }$/;"	f	class:userInfo
Get_CombinedAlgBThresh	userInfo.C	/^Float_t userInfo::Get_CombinedAlgBThresh()  const {return (M_AlgBCombinedThresh); }$/;"	f	class:userInfo
Get_Date	userInfo.C	/^TDatime userInfo::Get_Date() const { M_Now.Print();return(M_Now);}$/;"	f	class:userInfo
Get_Epsilon	userInfo.C	/^Int_t userInfo::Get_Epsilon() const {return(M_Epsilon);}$/;"	f	class:userInfo
Get_Frac	userInfo.C	/^Float_t userInfo::Get_Frac() const { return (M_Frac); }$/;"	f	class:userInfo
Get_IndividAlgAThresh	userInfo.C	/^Float_t userInfo::Get_IndividAlgAThresh() const { return (M_AlgAIndividThresh);}$/;"	f	class:userInfo
Get_IndividAlgBThresh	userInfo.C	/^Float_t userInfo::Get_IndividAlgBThresh() const { return (M_AlgBIndividThresh);} $/;"	f	class:userInfo
Get_MetL1Thresh	userInfo.C	/^Float_t userInfo::Get_MetL1Thresh() const { return( M_Metl1thresh); }$/;"	f	class:userInfo
Get_MetMax	userInfo.C	/^Float_t userInfo::Get_MetMax() const { return (M_Metmax);}$/;"	f	class:userInfo
Get_MetMin	userInfo.C	/^Float_t userInfo::Get_MetMin() const {return (M_Metmin);}$/;"	f	class:userInfo
Get_MuonFileName	userInfo.C	/^TString userInfo::Get_MuonFileName() const { return(M_MuonFileName);}$/;"	f	class:userInfo
Get_MuonNentries	userInfo.C	/^Int_t userInfo::Get_MuonNentries() const { return(M_MuonNentries);}$/;"	f	class:userInfo
Get_Nbins	userInfo.C	/^Int_t userInfo::Get_Nbins() const { return(M_Nbins); }$/;"	f	class:userInfo
Get_NumThreshPassProcess1	userInfo.C	/^Int_t userInfo::Get_NumThreshPassProcess1() const { return (M_NumPassnoalgPassProcess1); }$/;"	f	class:userInfo
Get_NumberEventsToKeep	userInfo.C	/^Int_t userInfo::Get_NumberEventsToKeep() const { return (M_NumberEventsToKeep) ;}$/;"	f	class:userInfo
Get_Passnoalgcut	userInfo.C	/^Float_t userInfo::Get_Passnoalgcut() const {return (M_Passnoalgcut);}$/;"	f	class:userInfo
Get_Passrndmcut	userInfo.C	/^Float_t userInfo::Get_Passrndmcut() const { return (M_Passrndmcut);}$/;"	f	class:userInfo
Get_ThreshFileName	userInfo.C	/^TString userInfo::Get_ThreshFileName() const { return (M_ThreshFileName);}$/;"	f	class:userInfo
Get_ThreshNentries	userInfo.C	/^Int_t userInfo::Get_ThreshNentries() const { return (M_PassnoAlgNentries) ; }$/;"	f	class:userInfo
Get_algA	TreeHandler.C	/^    const Float_t& Get_algA(){return TreeHandler_Obj.algA();};$/;"	f	namespace:TTreeReaderSpace
Get_algB	TreeHandler.C	/^    const Float_t& Get_algB(){return TreeHandler_Obj.algB();};$/;"	f	namespace:TTreeReaderSpace
Get_cleanCutsFlag	TreeHandler.C	/^    const Float_t& Get_cleanCutsFlag(){return TreeHandler_Obj.cleanCutsFlag();};$/;"	f	namespace:TTreeReaderSpace
Get_metl1	TreeHandler.C	/^    const Float_t& Get_metl1(){return TreeHandler_Obj.metl1();};$/;"	f	namespace:TTreeReaderSpace
Get_metoffrecal	TreeHandler.C	/^    const Float_t& Get_metoffrecal(){return TreeHandler_Obj.metoffrecal();};$/;"	f	namespace:TTreeReaderSpace
Get_metoffrecalmuon	TreeHandler.C	/^    const Float_t& Get_metoffrecalmuon(){return TreeHandler_Obj.metoffrecalmuon();};$/;"	f	namespace:TTreeReaderSpace
Get_metrefmuon	TreeHandler.C	/^    const Float_t& Get_metrefmuon(){return TreeHandler_Obj.metrefmuon();};$/;"	f	namespace:TTreeReaderSpace
Get_mexoffrecal	TreeHandler.C	/^    const Float_t& Get_mexoffrecal(){return TreeHandler_Obj.mexoffrecal();};$/;"	f	namespace:TTreeReaderSpace
Get_mexoffrecalmuon	TreeHandler.C	/^    const Float_t& Get_mexoffrecalmuon(){return TreeHandler_Obj.mexoffrecalmuon();};$/;"	f	namespace:TTreeReaderSpace
Get_mexrefmuon	TreeHandler.C	/^    const Float_t& Get_mexrefmuon(){return TreeHandler_Obj.mexrefmuon();};$/;"	f	namespace:TTreeReaderSpace
Get_meyoffrecal	TreeHandler.C	/^    const Float_t& Get_meyoffrecal(){return TreeHandler_Obj.meyoffrecal();};$/;"	f	namespace:TTreeReaderSpace
Get_meyoffrecalmuon	TreeHandler.C	/^    const Float_t& Get_meyoffrecalmuon(){return TreeHandler_Obj.meyoffrecalmuon();};$/;"	f	namespace:TTreeReaderSpace
Get_meyrefmuon	TreeHandler.C	/^    const Float_t& Get_meyrefmuon(){return TreeHandler_Obj.meyrefmuon();};$/;"	f	namespace:TTreeReaderSpace
Get_passmuon	TreeHandler.C	/^    const Float_t& Get_passmuon(){return TreeHandler_Obj.passmuon();};$/;"	f	namespace:TTreeReaderSpace
Get_passmuvarmed	TreeHandler.C	/^    const Float_t& Get_passmuvarmed(){return TreeHandler_Obj.passmuvarmed();};$/;"	f	namespace:TTreeReaderSpace
Get_passnoalgL1XE10	TreeHandler.C	/^    const Float_t& Get_passnoalgL1XE10(){return TreeHandler_Obj.passnoalgL1XE10();};$/;"	f	namespace:TTreeReaderSpace
Get_passnoalgL1XE30	TreeHandler.C	/^    const Float_t& Get_passnoalgL1XE30(){return TreeHandler_Obj.passnoalgL1XE30();};$/;"	f	namespace:TTreeReaderSpace
Get_passnoalgL1XE40	TreeHandler.C	/^    const Float_t& Get_passnoalgL1XE40(){return TreeHandler_Obj.passnoalgL1XE40();};$/;"	f	namespace:TTreeReaderSpace
Get_passnoalgL1XE45	TreeHandler.C	/^    const Float_t& Get_passnoalgL1XE45(){return TreeHandler_Obj.passnoalgL1XE45();};$/;"	f	namespace:TTreeReaderSpace
Get_passrndm	TreeHandler.C	/^    const Int_t& Get_passrndm(){return TreeHandler_Obj.passrndm();}$/;"	f	namespace:TTreeReaderSpace
Get_recalBrokeFlag	TreeHandler.C	/^    const Float_t& Get_recalBrokeFlag(){return TreeHandler_Obj.recalBrokeFlag();};$/;"	f	namespace:TTreeReaderSpace
Get_thresh_actint	TreeHandler.C	/^    const Float_t& Get_thresh_actint(){return TreeHandler_Obj.actint();};$/;"	f	namespace:TTreeReaderSpace
Handle	include/TreeHandler.h	/^            Handle() {}$/;"	f	class:TTreeReaderSpace::BranchHandle
Handle	include/TreeHandler.h	/^    Handle<T>::Handle(const std::string& branch_name)$/;"	f	class:TTreeReaderSpace::Handle
Init	TreeHandler.C	/^void TTreeReader::Init(TTree& tree)$/;"	f	class:TTreeReader
Init	TreeHandler.C	/^void TTreeReader::Init(TTree* const tree)$/;"	f	class:TTreeReader
Init	include/TreeHandler.h	/^    void Handle<T>::Init(TTree& tree)$/;"	f	class:TTreeReaderSpace::Handle
Load	include/TreeHandler.h	/^    void Handle<T>::Load()$/;"	f	class:TTreeReaderSpace::Handle
LoadAllBranches	TreeHandler.C	/^void TTreeReader::LoadAllBranches()$/;"	f	class:TTreeReader
MINCERMACROS_H	include/mincerMacros.h	2;"	d
M_ActintCut	include/userInfo.h	/^    Float_t M_ActintCut;$/;"	m	class:userInfo
M_AlgACombinedThresh	include/userInfo.h	/^    Float_t M_AlgACombinedThresh;$/;"	m	class:userInfo
M_AlgAIndividThresh	include/userInfo.h	/^    Float_t M_AlgAIndividThresh;$/;"	m	class:userInfo
M_AlgAName	include/userInfo.h	/^    TString M_AlgAName;$/;"	m	class:userInfo
M_AlgBCombinedThresh	include/userInfo.h	/^    Float_t M_AlgBCombinedThresh;$/;"	m	class:userInfo
M_AlgBIndividThresh	include/userInfo.h	/^    Float_t M_AlgBIndividThresh;$/;"	m	class:userInfo
M_AlgBName	include/userInfo.h	/^    TString M_AlgBName;$/;"	m	class:userInfo
M_BinWidth	include/userInfo.h	/^    Float_t M_BinWidth;$/;"	m	class:userInfo
M_BisectionData	include/userInfo.h	/^    TNtuple* M_BisectionData;$/;"	m	class:userInfo
M_Epsilon	include/userInfo.h	/^    Int_t M_Epsilon;$/;"	m	class:userInfo
M_Frac	include/userInfo.h	/^    Float_t M_Frac;$/;"	m	class:userInfo
M_Metl1thresh	include/userInfo.h	/^    Float_t M_Metl1thresh;$/;"	m	class:userInfo
M_Metmax	include/userInfo.h	/^    Float_t M_Metmax;$/;"	m	class:userInfo
M_Metmin	include/userInfo.h	/^    Float_t M_Metmin;$/;"	m	class:userInfo
M_MuonFileName	include/userInfo.h	/^    TString M_MuonFileName;$/;"	m	class:userInfo
M_MuonFilename	include/userInfo.h	/^    TString M_MuonFilename;$/;"	m	class:userInfo
M_MuonNentries	include/userInfo.h	/^    Int_t M_MuonNentries;$/;"	m	class:userInfo
M_Nbins	include/userInfo.h	/^    Int_t M_Nbins;$/;"	m	class:userInfo
M_Now	include/userInfo.h	/^    TDatime M_Now;$/;"	m	class:userInfo
M_NumMuonDenominator	include/userInfo.h	/^    Int_t M_NumMuonDenominator;$/;"	m	class:userInfo
M_NumMuonKeptCombined	include/userInfo.h	/^    Int_t M_NumMuonKeptCombined;$/;"	m	class:userInfo
M_NumMuonPassProcess1	include/userInfo.h	/^    Int_t M_NumMuonPassProcess1;$/;"	m	class:userInfo
M_NumMuonPassProcess2AlgA	include/userInfo.h	/^    Int_t M_NumMuonPassProcess2AlgA;$/;"	m	class:userInfo
M_NumMuonPassProcess2AlgB	include/userInfo.h	/^    Int_t M_NumMuonPassProcess2AlgB;$/;"	m	class:userInfo
M_NumMuonPassProcess2Combined	include/userInfo.h	/^    Int_t M_NumMuonPassProcess2Combined;$/;"	m	class:userInfo
M_NumPassnoalgPassProcess1	include/userInfo.h	/^    Int_t M_NumPassnoalgPassProcess1;$/;"	m	class:userInfo
M_NumPassnoalgProcess2AlgA	include/userInfo.h	/^    Int_t M_NumPassnoalgProcess2AlgA;$/;"	m	class:userInfo
M_NumPassnoalgProcess2AlgB	include/userInfo.h	/^    Int_t M_NumPassnoalgProcess2AlgB;$/;"	m	class:userInfo
M_NumPassnoalgProcess2AlgCombined	include/userInfo.h	/^    Int_t M_NumPassnoalgProcess2AlgCombined;$/;"	m	class:userInfo
M_NumberEventsToKeep	include/userInfo.h	/^    Int_t M_NumberEventsToKeep;$/;"	m	class:userInfo
M_PassnoAlgNentries	include/userInfo.h	/^    Int_t M_PassnoAlgNentries;$/;"	m	class:userInfo
M_Passnoalgcut	include/userInfo.h	/^    Float_t M_Passnoalgcut;$/;"	m	class:userInfo
M_Passrndmcut	include/userInfo.h	/^    Float_t M_Passrndmcut;$/;"	m	class:userInfo
M_ThreshFileName	include/userInfo.h	/^    TString M_ThreshFileName;$/;"	m	class:userInfo
M_ZerobiasFileName	include/userInfo.h	/^    TString M_ZerobiasFileName;$/;"	m	class:userInfo
NOT_SET	include/TreeHandler.h	/^        enum value_type { CLASS, BUILTIN, NOT_SET, static_size };$/;"	e	enum:TTreeReaderSpace::BranchType::value_type
Nbins	userInfo.C	/^Int_t Nbins = 1200;$/;"	v
Print	userInfo.C	/^void userInfo::Print(Option_t *option) const{$/;"	f	class:userInfo
Read_Parameter_File	userInfo.C	/^void userInfo::Read_Parameter_File( const TString FilePath ) {$/;"	f	class:userInfo
SetBranchType	include/TreeHandler.h	/^    void Handle<T>::SetBranchType(const std::string& branch_class)$/;"	f	class:TTreeReaderSpace::Handle
Set_ActintCut	userInfo.C	/^void userInfo::Set_ActintCut( const Float_t thresh ) { M_ActintCut = thresh; };$/;"	f	class:userInfo
Set_AlgACombinedThresh	userInfo.C	/^void userInfo::Set_AlgACombinedThresh( const Float_t thresh ) { M_AlgACombinedThresh = thresh; };$/;"	f	class:userInfo
Set_AlgAIndividThresh	userInfo.C	/^void userInfo::Set_AlgAIndividThresh( const Float_t thresh ) { M_AlgAIndividThresh = thresh; };$/;"	f	class:userInfo
Set_AlgAName	userInfo.C	/^void userInfo::Set_AlgAName( const TString algA ) { M_AlgAName = algA; };$/;"	f	class:userInfo
Set_AlgBCombinedThresh	userInfo.C	/^void userInfo::Set_AlgBCombinedThresh( const Float_t thresh ) { M_AlgBCombinedThresh = thresh; };$/;"	f	class:userInfo
Set_AlgBIndividThresh	userInfo.C	/^void userInfo::Set_AlgBIndividThresh( const Float_t thresh ) { M_AlgBIndividThresh = thresh; };$/;"	f	class:userInfo
Set_AlgBName	userInfo.C	/^void userInfo::Set_AlgBName( const TString algB ) { M_AlgBName = algB; };$/;"	f	class:userInfo
Set_Epsilon	userInfo.C	/^void userInfo::Set_Epsilon( const Int_t epson ) { M_Epsilon = epson; };$/;"	f	class:userInfo
Set_MuonFile	userInfo.C	/^void userInfo::Set_MuonFile( const TString file ){ M_MuonFilename = file;} ;$/;"	f	class:userInfo
Set_MuonNentries	userInfo.C	/^void userInfo::Set_MuonNentries( const Int_t num ) { M_MuonNentries = num; };$/;"	f	class:userInfo
Set_NumMuonKeptCombinedAtThresh	userInfo.C	/^void userInfo::Set_NumMuonKeptCombinedAtThresh( const Int_t num ) { M_NumMuonKeptCombined = num; };$/;"	f	class:userInfo
Set_NumMuonPassProcess2AlgA	userInfo.C	/^void userInfo::Set_NumMuonPassProcess2AlgA( const Float_t num ) {M_NumMuonPassProcess2AlgA = num;};$/;"	f	class:userInfo
Set_NumMuonPassProcess2AlgB	userInfo.C	/^void userInfo::Set_NumMuonPassProcess2AlgB( const Float_t num ) {M_NumMuonPassProcess2AlgB = num;};$/;"	f	class:userInfo
Set_NumMuonPassProcess2Combined	userInfo.C	/^void userInfo::Set_NumMuonPassProcess2Combined( const Float_t num ) {M_NumMuonPassProcess2Combined = num;};$/;"	f	class:userInfo
Set_NumPassNoAlgPassProcess1	userInfo.C	/^void userInfo::Set_NumPassNoAlgPassProcess1( const Float_t num ) {M_NumPassnoalgPassProcess1 = num;};$/;"	f	class:userInfo
Set_NumPassNoAlgPassProcess2AlgA	userInfo.C	/^void userInfo::Set_NumPassNoAlgPassProcess2AlgA( const Float_t num ) {M_NumPassnoalgProcess2AlgA = num;};$/;"	f	class:userInfo
Set_NumPassNoAlgPassProcess2AlgB	userInfo.C	/^void userInfo::Set_NumPassNoAlgPassProcess2AlgB( const Float_t num ) {M_NumPassnoalgProcess2AlgB = num;};$/;"	f	class:userInfo
Set_NumPassNoAlgPassProcess2Combined	userInfo.C	/^void userInfo::Set_NumPassNoAlgPassProcess2Combined( const Float_t num ) {M_NumPassnoalgProcess2AlgCombined = num;};$/;"	f	class:userInfo
Set_NumTotal	userInfo.C	/^void userInfo::Set_NumTotal( const Int_t num ) { M_NumMuonDenominator = num; };$/;"	f	class:userInfo
Set_PassnoalgNentries	userInfo.C	/^void userInfo::Set_PassnoalgNentries( const Int_t num ) { M_PassnoAlgNentries = num; };$/;"	f	class:userInfo
Set_ThresholdFile	userInfo.C	/^void userInfo::Set_ThresholdFile( const TString file ) { M_ZerobiasFileName = file; };$/;"	f	class:userInfo
TREEHANDLER_H	include/TreeHandler.h	2;"	d
TTreeReaderSpace	TreeHandler.C	/^namespace TTreeReaderSpace$/;"	n	file:
TTreeReaderSpace	include/TreeHandler.h	/^namespace TTreeReaderSpace{$/;"	n
TreeHandler	TreeHandler.C	/^TreeHandler::TreeHandler(const userInfo* parameters )$/;"	f	class:TreeHandler
TreeHandler	include/TreeHandler.h	/^class TreeHandler$/;"	c
TreeHandler_Obj	TreeHandler.C	/^TreeHandler TreeHandler_Obj;$/;"	v
actinTCut	userInfo.C	/^Float_t actinTCut = 0.0;$/;"	v
actint_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > actint_handle;$/;"	m	class:TreeHandler
algA	TreeHandler.C	/^const Float_t& TreeHandler::algA(){return algA_handle.get();};$/;"	f	class:TreeHandler
algA_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > algA_handle;$/;"	m	class:TreeHandler
algB	TreeHandler.C	/^const Float_t& TreeHandler::algB(){return algB_handle.get();};$/;"	f	class:TreeHandler
algB_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > algB_handle;$/;"	m	class:TreeHandler
bisection	bisection.C	/^Float_t bisection( userInfo* parameters , TH1F* algAHist , TH1F* algBHist, TTree* passnoalgTree )$/;"	f
clean	compile.C	/^void clean()$/;"	f
cleanCutsFlag	TreeHandler.C	/^const Float_t& TreeHandler::cleanCutsFlag(){return cleanCutsFlag_handle.get();};$/;"	f	class:TreeHandler
cleanCutsFlag_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > cleanCutsFlag_handle;$/;"	m	class:TreeHandler
compile	compile.C	/^bool compile(const std::string& option = "")$/;"	f
computeMetNoMu	mincerMacros.C	/^Float_t computeMetNoMu( const Float_t mexoffrecal , const Float_t meyoffrecal , const Float_t mexoffrecalmuon , const Float_t meyoffrecalmuon )$/;"	f
computeThresh	mincerMacros.C	/^Float_t computeThresh(const TH1F* target, const Float_t numberEventsToKeep)$/;"	f
determineMuonEventsKeptCombined	mincerMacros.C	/^Float_t determineMuonEventsKeptCombined( const TString& algA, const Float_t threshA,$/;"	f
determineZeroBiasThresh	mincerMacros.C	/^Float_t determineZeroBiasThresh( userInfo* parameters, const TString verbose )$/;"	f
epson	userInfo.C	/^Int_t epson = 25;$/;"	v
event	TreeHandler.C	/^    const unsigned int& event() {return TreeHandler_Obj.event();}$/;"	f	namespace:TTreeReaderSpace
event	TreeHandler.C	/^const unsigned int& TreeHandler::event() {return event_handle.get();}$/;"	f	class:TreeHandler
event_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< unsigned int > event_handle;$/;"	m	class:TreeHandler
generateEfficiencies	generateEfficiencies.C	/^Int_t generateEfficiencies( const TString& folderName = "")$/;"	f
ls	TreeHandler.C	/^    const unsigned int& ls() {return TreeHandler_Obj.ls();}$/;"	f	namespace:TTreeReaderSpace
ls	TreeHandler.C	/^const unsigned int& TreeHandler::ls() {return ls_handle.get();}$/;"	f	class:TreeHandler
ls_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< unsigned int > ls_handle;$/;"	m	class:TreeHandler
m_branch_name	include/TreeHandler.h	/^            std::string            m_branch_name;$/;"	m	class:TTreeReaderSpace::BranchHandle
m_branch_type	include/TreeHandler.h	/^            BranchType::value_type m_branch_type;$/;"	m	class:TTreeReaderSpace::BranchHandle
m_entry	include/TreeHandler.h	/^            unsigned int           m_entry;$/;"	m	class:TTreeReaderSpace::BranchHandle
m_is_loaded	include/TreeHandler.h	/^            bool                   m_is_loaded;$/;"	m	class:TTreeReaderSpace::BranchHandle
m_object	include/TreeHandler.h	/^            T                      m_object;$/;"	m	class:TTreeReaderSpace::BranchHandle
m_object_ptr	include/TreeHandler.h	/^            T*                     m_object_ptr;$/;"	m	class:TTreeReaderSpace::BranchHandle
m_passnoalgcut	userInfo.C	/^Float_t m_passnoalgcut = 0.0;$/;"	v
metMax	userInfo.C	/^Float_t metMax = 300.0;$/;"	v
metMin	userInfo.C	/^Float_t metMin = 0.0;$/;"	v
metl1	TreeHandler.C	/^const Float_t& TreeHandler::metl1(){return metl1_handle.get();};$/;"	f	class:TreeHandler
metl1Thresh	userInfo.C	/^Float_t metl1Thresh = 0.0;$/;"	v
metl1_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > metl1_handle;$/;"	m	class:TreeHandler
metoffrecal	TreeHandler.C	/^const Float_t& TreeHandler::metoffrecal(){return metoffrecal_handle.get();};$/;"	f	class:TreeHandler
metoffrecal_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > metoffrecal_handle;$/;"	m	class:TreeHandler
metoffrecalmuon	TreeHandler.C	/^const Float_t& TreeHandler::metoffrecalmuon(){return metoffrecalmuon_handle.get();};$/;"	f	class:TreeHandler
metoffrecalmuon_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > metoffrecalmuon_handle;$/;"	m	class:TreeHandler
metrefmuon	TreeHandler.C	/^const Float_t& TreeHandler::metrefmuon(){return metrefmuon_handle.get();};$/;"	f	class:TreeHandler
metrefmuon_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > metrefmuon_handle;$/;"	m	class:TreeHandler
mexoffrecal	TreeHandler.C	/^const Float_t& TreeHandler::mexoffrecal(){return mexoffrecal_handle.get();};$/;"	f	class:TreeHandler
mexoffrecal_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > mexoffrecal_handle;$/;"	m	class:TreeHandler
mexoffrecalmuon	TreeHandler.C	/^const Float_t& TreeHandler::mexoffrecalmuon(){return mexoffrecalmuon_handle.get();};$/;"	f	class:TreeHandler
mexoffrecalmuon_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > mexoffrecalmuon_handle;$/;"	m	class:TreeHandler
mexrefmuon	TreeHandler.C	/^const Float_t& TreeHandler::mexrefmuon(){return mexrefmuon_handle.get();};$/;"	f	class:TreeHandler
mexrefmuon_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > mexrefmuon_handle;$/;"	m	class:TreeHandler
meyoffrecal	TreeHandler.C	/^const Float_t& TreeHandler::meyoffrecal(){return meyoffrecal_handle.get();};$/;"	f	class:TreeHandler
meyoffrecal_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > meyoffrecal_handle;$/;"	m	class:TreeHandler
meyoffrecalmuon	TreeHandler.C	/^const Float_t& TreeHandler::meyoffrecalmuon(){return meyoffrecalmuon_handle.get();};$/;"	f	class:TreeHandler
meyoffrecalmuon_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > meyoffrecalmuon_handle;$/;"	m	class:TreeHandler
meyrefmuon	TreeHandler.C	/^const Float_t& TreeHandler::meyrefmuon(){return meyrefmuon_handle.get();};$/;"	f	class:TreeHandler
meyrefmuon_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > meyrefmuon_handle;$/;"	m	class:TreeHandler
numbtokeep	userInfo.C	/^Int_t numbtokeep  = 5600;$/;"	v
passTransverseMassCut	mincerMacros.C	/^Bool_t passTransverseMassCut( const Float_t metoffrecal , const Float_t mexoffrecal  , const Float_t meyoffrecal ,$/;"	f
passmuon	TreeHandler.C	/^const Float_t& TreeHandler::passmuon(){return passmuon_handle.get();};$/;"	f	class:TreeHandler
passmuon_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > passmuon_handle;$/;"	m	class:TreeHandler
passmuvarmed	TreeHandler.C	/^const Float_t& TreeHandler::passmuvarmed(){return passmuvarmed_handle.get();};$/;"	f	class:TreeHandler
passmuvarmed_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > passmuvarmed_handle;$/;"	m	class:TreeHandler
passnoalgL1XE10	TreeHandler.C	/^const Float_t& TreeHandler::passnoalgL1XE10(){return passnoalgL1XE10_handle.get();};$/;"	f	class:TreeHandler
passnoalgL1XE10_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > passnoalgL1XE10_handle;$/;"	m	class:TreeHandler
passnoalgL1XE30	TreeHandler.C	/^const Float_t& TreeHandler::passnoalgL1XE30(){return passnoalgL1XE30_handle.get();};$/;"	f	class:TreeHandler
passnoalgL1XE30_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > passnoalgL1XE30_handle;$/;"	m	class:TreeHandler
passnoalgL1XE40	TreeHandler.C	/^const Float_t& TreeHandler::passnoalgL1XE40(){return passnoalgL1XE40_handle.get();};$/;"	f	class:TreeHandler
passnoalgL1XE40_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > passnoalgL1XE40_handle;$/;"	m	class:TreeHandler
passnoalgL1XE45	TreeHandler.C	/^const Float_t& TreeHandler::passnoalgL1XE45(){return passnoalgL1XE45_handle.get();};$/;"	f	class:TreeHandler
passnoalgL1XE45_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > passnoalgL1XE45_handle;$/;"	m	class:TreeHandler
passrndm	TreeHandler.C	/^const Int_t& TreeHandler::passrndm() {return passrndm_handle.get();}$/;"	f	class:TreeHandler
passrndm_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Int_t        > passrndm_handle;$/;"	m	class:TreeHandler
print7Efficiencies	print7Efficiencies.C	/^Int_t print7Efficiencies(const TString& muonFileName = "PhysicsMain.L1KFmuontriggers.2016.f731f758_m1659m1710.Run309759.48Runs.root")$/;"	f
recalBrokeFlag	TreeHandler.C	/^const Float_t& TreeHandler::recalBrokeFlag(){return recalBrokeFlag_handle.get();};$/;"	f	class:TreeHandler
recalBrokeFlag_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< Float_t      > recalBrokeFlag_handle;$/;"	m	class:TreeHandler
run	TreeHandler.C	/^    const unsigned int& run() {return TreeHandler_Obj.run();}$/;"	f	namespace:TTreeReaderSpace
run	TreeHandler.C	/^const unsigned int& TreeHandler::run() {return run_handle.get();}$/;"	f	class:TreeHandler
run_handle	include/TreeHandler.h	/^        TTreeReaderSpace ::Handle< unsigned int > run_handle;$/;"	m	class:TreeHandler
static_size	include/TreeHandler.h	/^        enum value_type { CLASS, BUILTIN, NOT_SET, static_size };$/;"	e	enum:TTreeReaderSpace::BranchType::value_type
threeEfficiencies	threeEfficiencies.C	/^TFile* threeEfficiencies( const TString& AlgAName , const TString& AlgBName ) $/;"	f
thresh_actint	TreeHandler.C	/^const Float_t& TreeHandler::thresh_actint()(){return actint_handle.get();};$/;"	f	class:TreeHandler
treeReaderSpace	include/TreeHandler.h	/^namespace treeReaderSpace$/;"	n
userInfo	include/userInfo.h	/^class userInfo : public TObject {$/;"	c
userInfo	userInfo.C	/^userInfo::userInfo()$/;"	f	class:userInfo
userInfo_h	include/userInfo.h	3;"	d
value_type	include/TreeHandler.h	/^        enum value_type { CLASS, BUILTIN, NOT_SET, static_size };$/;"	g	struct:TTreeReaderSpace::BranchType
~BranchHandle	include/TreeHandler.h	/^            virtual ~BranchHandle(){}$/;"	f	class:TTreeReaderSpace::BranchHandle
